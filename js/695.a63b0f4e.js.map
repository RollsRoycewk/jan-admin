{"version":3,"file":"js/695.a63b0f4e.js","mappings":"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","sources":["webpack://jan-admin/./src/api/user-mange.js","webpack://jan-admin/./src/components/UploadExcel/utils.js","webpack://jan-admin/./src/components/UploadExcel/index.vue","webpack://jan-admin/./src/components/UploadExcel/index.vue?d1be","webpack://jan-admin/./src/views/import/utils.js","webpack://jan-admin/./src/views/import/index.vue","webpack://jan-admin/./src/views/import/index.vue?520e"],"sourcesContent":["// import request from '@/utils/request'\r\n\r\n/**\r\n * 获取用户列表数据\r\n */\r\nexport const getUserMangeList = (data) => {\r\n  //   return request({\r\n  //     url: '/user-manage/list',\r\n  //     params: data\r\n  //   })\r\n\r\n  return {\r\n    list: [\r\n      {\r\n        role: [\r\n          {\r\n            id: '1',\r\n            title: '超级管理员'\r\n          }\r\n        ],\r\n        _id: '612710a0ec87aa543c9c341d',\r\n        id: '0',\r\n        openTime: '1433088000000',\r\n        username: 'super-admin',\r\n        mobile: '188xxxx0001',\r\n        avatar:\r\n          'https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png'\r\n      },\r\n      {\r\n        role: [\r\n          {\r\n            id: '2',\r\n            title: '管理员'\r\n          }\r\n        ],\r\n        _id: '612710a0ec87aa543c9c341e',\r\n        id: '1',\r\n        username: 'admin',\r\n        openTime: '1559318400000',\r\n        mobile: '188xxxx0002',\r\n        avatar:\r\n          'https://img4.sycdn.imooc.com/61110c2b0001152907400741-140-140.jpg'\r\n      }\r\n    ],\r\n    total: 7,\r\n    page: '1',\r\n    size: '2'\r\n  }\r\n}\r\n\r\n/**\r\n * 批量导入\r\n */\r\nexport const userBatchImport = (data) => {\r\n  // return request({\r\n  //   url: '/user-manage/batch/import',\r\n  //   method: 'POST',\r\n  //   data\r\n  // })\r\n  return null\r\n}\r\n\r\n/**\r\n * 删除指定数据\r\n */\r\nexport const deleteUser = (id) => {\r\n  // return request({\r\n  //   url: `/user-manage/detele/${id}`\r\n  // })\r\n  return true\r\n}\r\n\r\n/**\r\n * 获取所有用户列表数据\r\n */\r\nexport const getUserManageAllList = () => {\r\n  // return request({\r\n  //   url: '/user-manage/all-list'\r\n  // })\r\n  return {\r\n    list: [\r\n      {\r\n        role: [\r\n          {\r\n            id: '1',\r\n            title: '超级管理员'\r\n          }\r\n        ],\r\n        _id: '612710a0ec87aa543c9c341d',\r\n        id: '0',\r\n        openTime: '1433088000000',\r\n        username: 'super-admin',\r\n        mobile: '188xxxx0001',\r\n        avatar:\r\n          'https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png'\r\n      },\r\n      {\r\n        role: [\r\n          {\r\n            id: '2',\r\n            title: '管理员'\r\n          }\r\n        ],\r\n        _id: '612710a0ec87aa543c9c341e',\r\n        id: '1',\r\n        username: 'admin',\r\n        openTime: '1559318400000',\r\n        mobile: '188xxxx0002',\r\n        avatar:\r\n          'https://img4.sycdn.imooc.com/61110c2b0001152907400741-140-140.jpg'\r\n      }\r\n    ],\r\n    total: 7,\r\n    page: '1',\r\n    size: '2'\r\n  }\r\n}\r\n\r\n/**\r\n * 获取用户详情\r\n */\r\nexport const userDetail = (id) => {\r\n  // return request({\r\n  //   url: `/user-manage/detail/${id}`\r\n  // })\r\n  return {\r\n    role: [\r\n      {\r\n        id: '1',\r\n        title: '超级管理员'\r\n      }\r\n    ],\r\n    remark: ['超级管理员', 'BOSS'],\r\n    experience: [\r\n      {\r\n        startTime: '1538323200000',\r\n        endTime: '1551369600000',\r\n        title: '慕课网',\r\n        desc: '混合开发京东商城'\r\n      },\r\n      {\r\n        startTime: '1614528000000',\r\n        endTime: '1625068800000',\r\n        title: '慕课网',\r\n        desc: 'uni-app 开发企业级小程序'\r\n      }\r\n    ],\r\n    _id: '612710a0ec87aa543c9c341d',\r\n    id: '0',\r\n    openTime: '1433088000000',\r\n    username: 'super-admin',\r\n    title: '超级管理员',\r\n    mobile: '188xxxx0001',\r\n    avatar:\r\n      'https://m.imooc.com/static/wap/static/common/img/logo-small@2x.png',\r\n    gender: '男',\r\n    nationality: '汉',\r\n    address: '北京市朝阳区xx大道 11xx0 号 3 层',\r\n    major: '在线职业教育平台',\r\n    glory: '国内领先的线上 IT 教育品牌'\r\n  }\r\n}\r\n\r\n/**\r\n * 获取指定用户角色\r\n */\r\nexport const userRoles = (id) => {\r\n  // return request({\r\n  //   url: `/user-manage/role/${id}`\r\n  // })\r\n  return [{ title: '超级管理员' }]\r\n}\r\n\r\n/**\r\n * 分用户分配角色\r\n */\r\nexport const updateRole = (id, roles) => {\r\n  // return request({\r\n  //   url: `/user-manage/update-role/${id}`,\r\n  //   method: 'POST',\r\n  //   data: {\r\n  //     roles\r\n  //   }\r\n  // })\r\n}\r\n","import XLSX from 'xlsx'\r\n/**\r\n * 获取表头（通用方式）\r\n */\r\nexport const getHeaderRow = (sheet) => {\r\n  const headers = []\r\n  const range = XLSX.utils.decode_range(sheet['!ref'])\r\n  let C\r\n  const R = range.s.r\r\n  /* start in the first row */\r\n  for (C = range.s.c; C <= range.e.c; ++C) {\r\n    /* walk every column in the range */\r\n    const cell = sheet[XLSX.utils.encode_cell({ c: C, r: R })]\r\n    /* find the cell in the first row */\r\n    let hdr = 'UNKNOWN ' + C // <-- replace with your desired default\r\n    if (cell && cell.t) hdr = XLSX.utils.format_cell(cell)\r\n    headers.push(hdr)\r\n  }\r\n  return headers\r\n}\r\n\r\nexport const isExcel = (file) => {\r\n  return /\\.(xlsx|xls|csv)$/.test(file.name)\r\n}\r\n","<template>\r\n  <div class=\"upload-excel\">\r\n    <div class=\"btn-upload\">\r\n      <el-button type=\"primary\" :loading=\"loading\" @click=\"handleUpload\">\r\n        {{ $t('msg.uploadExcel.upload') }}\r\n      </el-button>\r\n    </div>\r\n\r\n    <input\r\n      type=\"file\"\r\n      ref=\"excelUploadInput\"\r\n      class=\"excel-upload-input\"\r\n      accept=\".xlsx,.xls\"\r\n      @change=\"handleChange\"\r\n    />\r\n\r\n    <!-- https://developer.mozilla.org/zh-CN/docs/Web/API/HTML_Drag_and_Drop_API -->\r\n    <div\r\n      class=\"drop\"\r\n      @drop.stop.prevent=\"handleDrop\"\r\n      @dragover.stop.prevent=\"handleDragover\"\r\n      @dragenter.stop.prevent=\"handleDragover\"\r\n    >\r\n      <svg-icon icon=\"link\"></svg-icon>\r\n      <span>{{ $t('msg.uploadExcel.drop') }}</span>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport XLSX from 'xlsx'\r\nimport { defineProps, ref } from 'vue'\r\nimport { getHeaderRow, isExcel } from './utils'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst props = defineProps({\r\n  // 上传前回调\r\n  beforeUpload: Function,\r\n  // 成功回调\r\n  onSuccess: Function\r\n})\r\n\r\n/**\r\n * 点击上传触发\r\n */\r\nconst loading = ref(false)\r\nconst excelUploadInput = ref(null)\r\nconst handleUpload = () => {\r\n  excelUploadInput.value.click()\r\n}\r\n\r\nconst handleChange = (e) => {\r\n  const files = e.target.files\r\n  const rawFile = files[0] // only use files[0]\r\n  if (!rawFile) return\r\n  upload(rawFile)\r\n}\r\n\r\n/**\r\n * 触发上传事件\r\n */\r\nconst upload = (rawFile) => {\r\n  excelUploadInput.value.value = null\r\n  // 如果没有指定上传前回调的话\r\n  if (!props.beforeUpload) {\r\n    readerData(rawFile)\r\n    return\r\n  }\r\n\r\n  // 如果指定了上传前回调,那么只有返回true才会执行后续操作\r\n  const before = props.beforeUpload(rawFile)\r\n  if (before) {\r\n    readerData(rawFile)\r\n  }\r\n}\r\n\r\n/**\r\n * 读取数据(异步)\r\n */\r\nconst readerData = (rawFile) => {\r\n  loading.value = true\r\n  return new Promise((resolve, reject) => {\r\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader\r\n    const reader = new FileReader()\r\n    // 该事件在读取操作完成时触发\r\n    // https://developer.mozilla.org/zh-CN/docs/Web/API/FileReader/onload\r\n    reader.onload = (e) => {\r\n      // 1.获取解析到的数据\r\n      const data = e.target.result\r\n      // 2.利用XLSX对数据进行解析\r\n      const workbook = XLSX.read(data, { type: 'array' })\r\n      // 3.获取第一张表格(工作簿)名称\r\n      const firstSheetName = workbook.SheetNames[0]\r\n      // 4.只读取Sheet1(第一张表格)de数据\r\n      const worksheet = workbook.Sheets[firstSheetName]\r\n      // 5.解析表头数据\r\n      const header = getHeaderRow(worksheet)\r\n      // 6.解析数据体\r\n      const results = XLSX.utils.sheet_to_json(worksheet)\r\n      // 7.传入解析之后的数据\r\n      generateData({ header, results })\r\n      // 8.loading处理\r\n      loading.value = false\r\n      // 9.异步完成\r\n      resolve()\r\n    }\r\n\r\n    // 启动读取指定的Blob或File内容\r\n    reader.readAsArrayBuffer(rawFile)\r\n  })\r\n}\r\n\r\n/**\r\n * 根据导入内容,生成数据\\\r\n */\r\nconst generateData = (excelData) => {\r\n  props.onSuccess && props.onSuccess(excelData)\r\n}\r\n/**\r\n * 拖拽文本释放时触发\r\n */\r\nconst handleDrop = (e) => {\r\n  console.log('eeeeee', e)\r\n  // 上传中跳过\r\n  if (loading.value) return\r\n  const files = e.dataTransfer.files\r\n  if (files.length !== 1) {\r\n    return ElMessage.error('必须要有一个文件')\r\n  }\r\n\r\n  const rawFile = files[0]\r\n  if (!isExcel(rawFile)) {\r\n    ElMessage.error('文件必须是.xlsx,.xls,.csv格式')\r\n    return false\r\n  }\r\n\r\n  // 触发上传事件\r\n  upload(rawFile)\r\n}\r\n\r\n/**\r\n * 拖拽悬停时触发\r\n */\r\nconst handleDragover = (e) => {\r\n  // https://developer.mozilla.org/zh-CN/docs/Web/API/DataTransfer/dropEffect\r\n  // 在新位置生成源项的副本\r\n  e.dataTransfer.dropEffect = 'copy'\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.upload-excel {\r\n  display: flex;\r\n  justify-content: center;\r\n  margin-top: 100px;\r\n  .excel-upload-input {\r\n    display: none;\r\n    z-index: -9999;\r\n  }\r\n  .btn-upload,\r\n  .drop {\r\n    border: 1px dashed #bbb;\r\n    width: 350px;\r\n    height: 160px;\r\n    text-align: center;\r\n    line-height: 160px;\r\n  }\r\n  .drop {\r\n    line-height: 160px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    color: #bbb;\r\n    svg {\r\n      font-size: 60px;\r\n      display: block;\r\n      margin-right: 20px;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=5f92e711&lang=scss&scoped=true\"\n\nimport exportComponent from \"G:\\\\RollsRoycewkk\\\\jan-admin\\\\node_modules\\\\vue-loader\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-5f92e711\"]])\n\nexport default __exports__","/**\r\n * 导入数据对应表\r\n */\r\nexport const USER_RELATIONS = {\r\n  姓名: 'username',\r\n  联系方式: 'mobile',\r\n  角色: 'role',\r\n  开通时间: 'openTime'\r\n}\r\n\r\n/**\r\n * 解析 excel 导入的时间格式\r\n */\r\nexport const formatDate = (numb) => {\r\n  const time = new Date((numb - 1) * 24 * 3600000 + 1)\r\n  time.setYear(time.getFullYear() - 70)\r\n  const year = time.getFullYear() + ''\r\n  const month = time.getMonth() + 1 + ''\r\n  const date = time.getDate() - 1 + ''\r\n  return (\r\n    year +\r\n    '-' +\r\n    (month < 10 ? '0' + month : month) +\r\n    '-' +\r\n    (date < 10 ? '0' + date : date)\r\n  )\r\n}\r\n","<template>\r\n  <div>\r\n    <upload-excel :onSuccess=\"onSuccess\"></upload-excel>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport UploadExcel from '@/components/UploadExcel'\r\nimport { USER_RELATIONS, formatDate } from './utils'\r\nimport { userBatchImport } from '@/api/user-mange'\r\nimport { ElMessage } from 'element-plus'\r\nimport { useI18n } from 'vue-i18n'\r\nimport { useRouter } from 'vue-router'\r\n\r\nconst i18n = useI18n()\r\nconst router = useRouter()\r\n/**\r\n * 数据解析成功之后的回调\r\n */\r\nconst onSuccess = ({ header, results }) => {\r\n  const updateData = generateData(results)\r\n\r\n  userBatchImport(updateData)\r\n\r\n  ElMessage.success({\r\n    message: 1 + i18n.t('msg.excel.importSuccess'),\r\n    type: 'success'\r\n  })\r\n\r\n  router.push('/user/manage')\r\n}\r\n\r\n/**\r\n * 筛选数据\r\n */\r\nconst generateData = (results) => {\r\n  const arr = []\r\n  results.forEach((item) => {\r\n    const userInfo = {}\r\n    Object.keys(item).forEach((key) => {\r\n      if (USER_RELATIONS[key] === 'openTime') {\r\n        userInfo[USER_RELATIONS[key]] = formatDate(item[key])\r\n        return\r\n      }\r\n      userInfo[USER_RELATIONS[key]] = item[key]\r\n    })\r\n    arr.push(userInfo)\r\n  })\r\n\r\n  return arr\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped></style>\r\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getUserMangeList","data","list","role","id","title","_id","openTime","username","mobile","avatar","total","page","size","userBatchImport","deleteUser","getUserManageAllList","userDetail","remark","experience","startTime","endTime","desc","gender","nationality","address","major","glory","userRoles","getHeaderRow","sheet","headers","range","XLSX","C","R","s","r","c","e","cell","hdr","t","push","isExcel","file","test","name","loading","ref","excelUploadInput","handleUpload","value","click","handleChange","files","target","rawFile","upload","props","beforeUpload","readerData","before","Promise","resolve","reject","reader","FileReader","onload","result","workbook","type","firstSheetName","SheetNames","worksheet","Sheets","header","results","generateData","readAsArrayBuffer","excelData","onSuccess","handleDrop","console","log","dataTransfer","length","ElMessage","handleDragover","dropEffect","__exports__","USER_RELATIONS","姓名","联系方式","角色","开通时间","formatDate","numb","time","Date","setYear","getFullYear","year","month","getMonth","date","getDate","i18n","useI18n","router","useRouter","updateData","message","arr","forEach","item","userInfo","Object","keys","key"],"sourceRoot":""}